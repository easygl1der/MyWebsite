{
  "snippets": "[\n    {trigger: \"bsq\", replacement: \"\\\\bigsqcup \", priority: 1, options: \"mA\"},\n    {trigger: \"(n|k|i|j|m)qq\", replacement: \"_{[[0]]-1}\", options: \"rmA\"},\n    {trigger: \"(n|k|i|j|m)pp\", replacement: \"_{[[0]]+1}\", options: \"rmA\"},\n    {trigger: \"top\", replacement: \"topology\", options: \"t\"},\n    {trigger: /(\\d+?|[a-zA-Z])\\//, replacement: \"\\\\frac{[[0]]}{$0} \", options: \"rm\"},\n    {trigger: /([a-zA-Z]|\\d)\\/([a-zA-Z]|\\d)/, replacement: \"\\\\frac{[[0]]}{[[1]]}$0 \", options: \"rm\"},\n    {trigger: /(\\d+?)\\/(\\d+)/, replacement: \"\\\\frac{[[0]]}{[[1]]}$0 \", options: \"rm\"},\n    {trigger: \"\\\\s([,|.])\\\\s\", replacement: \"[[0]] \", options: \"rtA\"},\n    {trigger: \"teh \", replacement: \"the \", options: \"rA\", description: \"Convert 'teh ' to 'the '\"},\n    {trigger: \"bul\", replacement:\"\\\\bullet\", options: \"mA\"},\n    {trigger: \"(max|min|sup|inf)\", replacement: \"\\\\[[0]]\", options: \"rm\"},\n    // plugs shared from web, e.g. https://github.com/artisticat1/obsidian-latex-suite/discussions/50\n    {trigger: \"ie\", replacement: \"i.e.\", options: \"tm\"},\n    {trigger: \"Ie\", replacement: \"i.e.\", options: \"tm\"},\n    {trigger: \"ae\", replacement: \"a.e.\", options: \"tm\"},\n    {trigger: \"st\", replacement: \"s.t.\", options: \"tm\"},\n    {trigger: \"clr\", replacement: \"\\\\textcolor{${0:red}}{$1}\", options: \"mA\", description: \"Control math mode color\"},\n    {trigger: \"c\", replacement: \"\\\\textcolor{${0:red}} {${VISUAL}} $1\", options: \"mA\", description: \"Control math mode color\"},\n    {trigger: \"n\", replacement: \"\\\\lvert ${VISUAL} \\\\rvert $0\", options: \"mA\"},\n    {trigger: \"N\", replacement: \"\\\\lVert ${VISUAL} \\\\rVert $0\", options: \"mA\"},\n    {trigger: \"([^'])\\\\b((?![aAI])[a-zA-Z])\\\\b([\\\\n\\\\s\\\\,.])\", replacement: \"[[0]]$[[1]]$[[2]]\", options: \"rtA\", description: \"Automatically treat lone characters as math (except a, A, I)\"},\n    {trigger: \"([^'])\\\\b([aAI])\\\\b([\\\\n\\\\s\\\\,.])\", replacement: \"[[0]]$[[1]]$[[2]]\", options: \"rt\", description: \"Automatically treat lone characters as math (a, A, I)\"},\n    {trigger: \"\\\\b(-?\\\\d*\\\\.?\\\\d+)\\\\b(\\\\s|,)\", replacement: \"$\\\\displaystyle [[0]]$[[1]]\", options: \"rtA\", description: \"Automatically convert numbers to math\"},\n    {trigger: \"A\", replacement: \"\\\\begin{aligned}\\n${VISUAL}\\n\\\\end{aligned}\", options: \"mA\", description: \"Align visual\"},\n    {trigger: \"\\\\\\\\(mathbf{([A-Za-z])}|boldsymbol{([A-Za-z])})T\", replacement: \"\\\\[[0]]^{\\\\top}\", options: \"rmA\", description: \"Transpose\"},\n     {trigger: \"\\\\\\\\(mathbf{([A-Za-z])}|boldsymbol{([A-Za-z])}|mathbb{([A-Za-z])})\\\\*\", replacement: \"\\\\[[0]]^{*}\", options: \"rmA\", description: \"Conjugate\"},\n    {trigger: \"latex\", replacement: \"$\\\\LaTeX$ \", options: \"tm\"},\n    {trigger: \"Latex\", replacement: \"$\\\\LaTeX$ \", options: \"tm\"},\n    // {trigger: \"([A-Za-z]+)ppp\", replacement: \"[[0]]_1+[[0]]_2+\\\\cdots+[[0]]_{${0:n}} \", priority: 2, options: \"rm\"},\n    {trigger: \"cal\", replacement: \"\\\\mathcal{$0}\", options: \"mA\"},\n    {trigger: \"frak\", replacement: \"\\\\frak{$0}\", options: \"mA\"},\n    {trigger: \"scr\", replacement: \"\\\\mathscr{$0}\", options: \"mA\"},\n    {trigger: \"dim\", replacement: \"\\\\dim \", options: \"mA\"},\n    {trigger: \"(cup|cap)\", replacement: \"\\\\[[0]]\", options: \"rmA\"},\n    {trigger: \"scup\", replacement: \"\\\\sqcup\", options: \"rmA\", priority: 2},\n    {trigger: \"scap\", replacement: \"\\\\sqcap\", options: \"rmA\", priority: 2},\n    {trigger: \"\\\\bigcup\", replacement: \"\\\\bigcup_{${0:n}=${1:1}}^{$2} $3\", options: \"m\"},\n    {trigger: \"\\\\bigcap\", replacement: \"\\\\bigcap_{${0:n}=${1:1}}^{$2} $3\", options: \"m\"},\n    {trigger: \"\\\\\\\\\\\\\", replacement: \"\\\\setminus\", options: \"A\"},\n    {trigger: \"choose\", replacement: \"\\\\choose\", options: \"mA\"},\n    {trigger: \"\\\\degree\", replacement: \"\\\\degree\", options: \"mA\",priority: 2},\n    // code mode\n    {trigger: \"tp\", replacement: \"TypeScript\", options: \"c\"},\n    {trigger: \"js\", replacement: \"JavaScript\", options: \"c\"},\n    {trigger: \"latex\", replacement: \"latex\\n\\\\documentclass{article}\\n\\n\\\\usepackage\\{amsmath,amscd,color,array,ctex\\}\\n\\n\\\\begin{document}\\n$0\\n\\\\end{document}\", options: \"c\"},\n    {trigger: \"tikz\", replacement: \"tikz\\n\\\\usepackage\\{tikz-cd\\}\\n\\n\\\\begin{document}\\n\\\\begin{tikzcd}\\n$0\\n\\\\end{tikzcd}\\n\\\\end{document}\", options: \"c\"},\n    {trigger: \"(d|dd|r|rr|l|ll|u|uu|dr|dl|ur|ul|rd|ld|ru|lu|ddr|uur|ddl|uul)\", replacement: \"\\\\arrow\\[[[0]]${0:,mapsto}\\] & $1\", options: \"c\"},\n    {trigger: \"qq\", replacement: \"\\\\qquad $0\", options: \"mA\"},\n    {trigger: \"fa\", replacement: \"\\\\forall $0\", options: \"m\"},\n    // Math mode\n    {trigger: \"Mk\", replacement: \"$\\\\displaystyle $0$\", options: \"tA\"},\n    {trigger: \"mk\", replacement: \"$\\\\displaystyle $0$\", options: \"tA\"},\n    {trigger: \"dsp\", replacement: \"\\\\displaystyle\", options: \"mA\"},\n    {trigger: \">>\", replacement: \"@>$0>>$1\", options: \"mA\"},\n    {trigger: \"<<\", replacement: \"@<$0<<$1\", options: \"mA\"},\n    {trigger: \"VV\", replacement: \"@V$0VV$1\", options: \"mA\"},\n    {trigger: \"AA\", replacement: \"@A$0AA$1\", options: \"mA\"},\n\t// {trigger: \"mk\", replacement: \"$$0$\", options: \"tA\"},\n    {trigger: \"dm\", replacement: \"$$\\n$0\\n$$\", options: \"tAw\"},\n\t{trigger: \"Dm\", replacement: \"$$\\n$0\\n$$\", options: \"tAw\"},\n    //add more\n    {trigger: \"Psi\", replacement: \"\\\\Psi\", options: \"mA\"},\n    {trigger: \"sf\", replacement: \"\\\\mathsf{$0}\", options: \"mA\"},\n    {trigger: \"deg\", replacement: \"\\\\deg\", options: \"mA\"},\n    {trigger: \"arg\", replacement: \"\\\\arg\", options: \"mA\"},\n    {trigger: \"circ\", replacement: \"\\\\circ \", options: \"mA\"},\n    {trigger: \"aut\", replacement:\"\\\\mathrm{Aut}\", options: \"mA\"},\n    // Greek letters\n\t{trigger: \"@a\", replacement: \"\\\\alpha\", options: \"mA\"},\n\t{trigger: \"@b\", replacement: \"\\\\beta\", options: \"mA\"},\n\t{trigger: \"@g\", replacement: \"\\\\gamma\", options: \"mA\"},\n\t{trigger: \"@G\", replacement: \"\\\\Gamma\", options: \"mA\"},\n\t{trigger: \"@d\", replacement: \"\\\\delta\", options: \"mA\"},\n\t{trigger: \"@D\", replacement: \"\\\\Delta\", options: \"mA\"},\n\t{trigger: \"@e\", replacement: \"\\\\epsilon\", options: \"mA\"},\n\t{trigger: \":e\", replacement: \"\\\\varepsilon\", options: \"mA\"},\n\t{trigger: \"@z\", replacement: \"\\\\zeta\", options: \"mA\"},\n\t{trigger: \"@t\", replacement: \"\\\\theta\", options: \"mA\"},\n\t{trigger: \"@T\", replacement: \"\\\\Theta\", options: \"mA\"},\n\t{trigger: \":t\", replacement: \"\\\\vartheta\", options: \"m\"},\n\t{trigger: \"@i\", replacement: \"\\\\iota\", options: \"mA\"},\n\t{trigger: \"@k\", replacement: \"\\\\kappa\", options: \"mA\"},\n\t{trigger: \"@l\", replacement: \"\\\\lambda\", options: \"mA\"},\n\t{trigger: \"@L\", replacement: \"\\\\Lambda\", options: \"mA\"},\n\t{trigger: \"@s\", replacement: \"\\\\sigma\", options: \"mA\"},\n\t{trigger: \"@S\", replacement: \"\\\\Sigma\", options: \"mA\"},\n\t{trigger: \"@u\", replacement: \"\\\\upsilon\", options: \"mA\"},\n\t{trigger: \"@U\", replacement: \"\\\\Upsilon\", options: \"mA\"},\n\t{trigger: \"ome\", replacement: \"\\\\omega\", options: \"mA\"},\n\t{trigger: \"Ome\", replacement: \"\\\\Omega\", options: \"mA\"},\n    {trigger: \"@p\", replacement: \"\\\\varphi\", options: \"mA\"},\n\n    // Text environment\n    {trigger: \"text\", replacement: \"\\\\text{$0}$1\", options: \"mA\"},\n    {trigger: \"\\\"\", replacement: \"\\\\text{$0}$1\", options: \"mA\"},\n    {trigger: \"T\", replacement: \"\\\\text{${VISUAL}}$1\", options: \"mA\"},\n    // Basic operations\n    {trigger: \"sr\", replacement: \"^{2}\", options: \"mA\"},\n\t{trigger: \"cb\", replacement: \"^{3}\", options: \"mA\"},\n\t{trigger: \"rd\", replacement: \"^{$0}$1\", options: \"mA\"},\n\t{trigger: \"_\", replacement: \"_{$0}$1\", options: \"mA\"},\n\t{trigger: \"sts\", replacement: \"_\\\\text{$0}\", options: \"mA\"},\n\t{trigger: \"sq\", replacement: \"\\\\sqrt{ $0 }$1\", options: \"mA\"},\n    {trigger: \"ssq\", replacement: \"\\\\sqrt[${0:n}]{ $1 }$2\", options: \"mA\"},\n\t{trigger: \"//\", replacement: \"\\\\frac{$0}{$1}$2\", options: \"mA\"},\n\t{trigger: \"ee\", replacement: \"e^{ $0 }$1\", options: \"mA\"},\n    {trigger: \"iv\", replacement: \"^{-1}\", options: \"mA\"},\n    {trigger: \"([A-Za-z])(\\\\d)\", replacement: \"[[0]]_{[[1]]}\", options: \"rmA\", description: \"Auto letter subscript\", priority: -1},\n    {trigger: \"(eq|to|sin|sim|cos|approx|displaystyle|dots|dot|times|equiv|log|\\\\ln|arrow|arrows|pm|mp|tan)(\\\\d)\", replacement: \"[[0]][[1]]\", options: \"rmA\", description: \"Auto letter subscript\", priority: 1},\n\n    {trigger: /([^\\\\])(exp|log|ln)/, replacement: \"[[0]]\\\\[[1]]\", options: \"rmA\"},\n    {trigger: \"conj\", replacement: \"^{*}\", options: \"mA\"},\n    {trigger: \"Re\", replacement: \"\\\\mathrm{Re}\", options: \"mA\"},\n    {trigger: \"(ker|Ker)\", replacement: \"\\\\mathrm{Ker}\", options: \"rmA\"},\n\t{trigger: \"(Im)\", replacement: \"\\\\mathrm{Im}\", options: \"rmA\"},\n    {trigger: \"(coim|Coim)\", replacement: \"\\\\mathrm{Coim}\", options: \"rmA\"},\n    {trigger: \"(coker|Coker)\", replacement: \"\\\\mathrm{Coker}\", options: \"rmA\"},\n    {trigger: \"bb\", replacement: \"\\\\mathbb{$0}\", options: \"mA\"},\n    {trigger: \"bf\", replacement: \"\\\\bf{$0}\", options: \"mA\"},\n\t{trigger: \"rm\", replacement: \"\\\\mathrm{$0}$1\", options: \"mA\"},\n\n    // Linear algebra\n    {trigger: /([^\\\\])(det)/, replacement: \"[[0]]\\\\[[1]]\", options: \"rmA\"},\n    {trigger: \"trace\", replacement: \"\\\\mathrm{Tr}\", options: \"mA\"},\n\n    // More operations\n\t{trigger: \"([a-zA-Z])hat\", replacement: \"\\\\widehat{[[0]]}\", options: \"rmA\"},\n    {trigger: \"([a-zA-Z])bar\", replacement: \"\\\\bar{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])dot\", replacement: \"\\\\dot{[[0]]}\", options: \"rmA\", priority: -1},\n\t{trigger: \"([a-zA-Z])ddot\", replacement: \"\\\\ddot{[[0]]}\", options: \"rmA\", priority: 1},\n\t{trigger: \"([a-zA-Z])til\", replacement: \"\\\\widetilde{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])und\", replacement: \"\\\\underline{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])vec\", replacement: \"\\\\vec{[[0]]}\", options: \"rmA\"},\n    {trigger: \"([a-zA-Z]),\\\\.\", replacement: \"\\\\boldsymbol{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])\\\\.,\", replacement: \"\\\\boldsymbol{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}),\\\\.\", replacement: \"\\\\boldsymbol{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK})\\\\.,\", replacement: \"\\\\boldsymbol{\\\\[[0]]}\", options: \"rmA\"},\n\n    {trigger: \"mid\", replacement: \"\\\\left.{$0}\\\\right|$1\", options: \"mA\"},\n    {trigger: \"|\", replacement: \"\\\\left.${VISUAL}\\\\right|$0\", options: \"mA\"},\n\t{trigger: \"hat\", replacement: \"\\\\widehat{$0}$1\", options: \"mA\"},\n    {trigger: \"bar\", replacement: \"\\\\bar{$0}$1\", options: \"mA\"},\n\t{trigger: \"dot\", replacement: \"\\\\dot{$0}$1\", options: \"mA\", priority: -1},\n\t{trigger: \"ddot\", replacement: \"\\\\ddot{$0}$1\", options: \"mA\"},\n\t{trigger: \"til\", replacement: \"\\\\widetilde{$0}$1\", options: \"mA\"},\n\t{trigger: \"und\", replacement: \"\\\\underline{$0}$1\", options: \"mA\"},\n\t{trigger: \"vec\", replacement: \"\\\\vec{$0}$1\", options: \"mA\"},\n\n    // More auto letter subscript\n    // {trigger: /([A-Za-z])_(\\d\\d)/, replacement: \"[[0]]_{[[1]]}\", options: \"rmA\"},\n\t{trigger: /\\\\widehat{([A-Za-z])}(\\d)/, replacement: \"\\\\widehat{[[0]]}_{[[1]]}\", options: \"rmA\"},\n\t{trigger: /\\\\vec{([A-Za-z])}(\\d)/, replacement: \"\\\\vec{[[0]]}_{[[1]]}\", options: \"rmA\"},\n\t{trigger: /\\\\bf{([A-Za-z])}(\\d)/, replacement: \"\\\\bf{[[0]]}_{[[1]]}\", options: \"rmA\"},\n    \n    {trigger: \"jj\", replacement: \"_{j}\", options: \"mA\"},\n    {trigger: \"ii\", replacement: \"_{i}\", options: \"mA\"},\n    {trigger: \"nn\", replacement: \"_{n}\", options: \"mA\"},\n    {trigger: \"mm\", replacement: \"_{m}\", options: \"mA\"},\n    {trigger: \"kk\", replacement: \"_{k}\", options: \"mA\"},\n    // {trigger: \"rr\", replacement: \"_{r}\", options: \"mA\"},\n\n    // Symbols\n    {trigger: \"ooo\", replacement: \"\\\\infty\", options: \"mA\"},\n\t{trigger: \"sum\", replacement: \"\\\\sum\", options: \"mA\"},\n\t{trigger: \"prod\", replacement: \"\\\\prod\", options: \"mA\"},\n    {trigger: \"coprod\", replacement: \"\\\\coprod\", options: \"mA\"},\n\t{trigger: \"\\\\sum\", replacement: \"\\\\sum_{${0:n}=${1:1}}^{$2} $3\", options: \"m\"},\n\t{trigger: \"\\\\prod\", replacement: \"\\\\prod_{${0:n}=${1:1}}^{$2} $3\", options: \"m\"},\n    {trigger: \"lim\", replacement: \"\\\\lim_{ ${0:n} \\\\to ${1:\\\\infty} } $2\", options: \"mA\"},\n    {trigger: \"lip\", replacement: \"\\\\limsup_{ ${0:n} \\\\to ${1:\\\\infty} } $2\", options: \"mA\"},\n    {trigger: \"lif\", replacement: \"\\\\liminf_{ ${0:n} \\\\to ${1:\\\\infty} } $2\", options: \"mA\"},\n    {trigger: \"+-\", replacement: \"\\\\pm\", options: \"mA\"},\n\t{trigger: \"-+\", replacement: \"\\\\mp\", options: \"mA\"},\n    {trigger: \"...\", replacement: \"\\\\dots\", options: \"mA\"},\n    {trigger: \"xx\", replacement: \"\\\\times\", options: \"mA\"},\n    {trigger: \"dd\", replacement: \"\\\\cdot\", options: \"mA\"},\n    {trigger: \"para\", replacement: \"\\\\parallel\", options: \"mA\"},\n\n\t{trigger: \"===\", replacement: \"\\\\equiv \", options: \"mA\"},\n    {trigger: \"!=\", replacement: \"\\\\neq \", options: \"mA\"},\n\t{trigger: \">=\", replacement: \"\\\\geq \", options: \"mA\"},\n\t{trigger: \"<=\", replacement: \"\\\\leq \", options: \"mA\"},\n\t{trigger: \">>\", replacement: \"\\\\gg \", options: \"m\"},\n\t{trigger: \"<<\", replacement: \"\\\\ll \", options: \"m\"},\n    {trigger: \"<>\", replacement: \"\\\\left<$1\\\\right>$2\", options: \"mA\"},\n\t{trigger: \"simm\", replacement: \"\\\\sim \", options: \"mA\"},\n\t{trigger: \"sim=\", replacement: \"\\\\simeq \", options: \"mA\"},\n\t{trigger: \"cong\", replacement: \"\\\\cong \", options: \"mA\"},\n    {trigger: \"prop\", replacement: \"\\\\propto\", options: \"mA\"},\n    {trigger: \"::=\", replacement: \"\\\\triangleq \", options: \"mA\"},\n    {trigger: \":=\", replacement: \"\\\\coloneqq \", options: \"mA\"},\n    {trigger: \"=:\", replacement: \"\\\\eqqcolon \", options: \"mA\"},\n    // aows\n    {trigger: \"<->\", replacement: \"\\\\Leftrightarrow \", options: \"mA\"},\n\t{trigger: \"->\", replacement: \"\\\\to\", options: \"mA\", priority: -1},\n    {trigger: \"-->\", replacement: \"\\\\longrightarrow\", options: \"mA\"},\n\t{trigger: \"!>\", replacement: \"\\\\mapsto\", options: \"mA\"},\n    {trigger: \"upa\", replacement: \"\\\\uparrow\", options: \"mA\"},\n    {trigger: \"downa\", replacement: \"\\\\downarrow\", options: \"mA\"},\n    {trigger: \"!->\", replacement: \"\\\\longmapsto\", options: \"mA\"},\n    {trigger: \"=>\", replacement: \"\\\\Rightarrow\", options: \"mA\"},\n    {trigger: \"=<\", replacement: \"\\\\Leftarrow\", options: \"mA\"},\n    {trigger: \"==>\", replacement: \"\\\\implies\", options: \"mA\"},\n\t{trigger: \"==<\", replacement: \"\\\\impliedby\", options: \"mA\"},\n    {trigger: \"l->\", replacement: \"\\\\hookrightarrow\", options: \"mA\"},\n    {trigger: \">->\", replacement: \"\\\\rightarrowtail\", options: \"mA\", priority: 1},\n    {trigger: \"twoh\", replacement: \"\\\\twoheadrightarrow\", options: \"mA\"},\n    {trigger: \"m->\", replacement: \"\\\\rightsquigarrow\", options: \"mA\", priority: 1},\n    {trigger: \"r->\", replacement: \"\\\\rightrightarrows \", options: \"mA\", priority: 1},\n    //sets\n\t{trigger: \"notin\", replacement: \"\\\\not\\\\in\", options: \"mA\"},\n    {trigger: \"sub=\", replacement: \"\\\\subseteq\", options: \"mA\"},\n    {trigger: \"sup=\", replacement: \"\\\\supseteq\", options: \"mA\"},\n\t{trigger: \"eset\", replacement: \"\\\\varnothing\", options: \"mA\"},\n\t{trigger: \"set\", replacement: \"\\\\{ $0 \\\\}$1\", options: \"mA\"},\n\t{trigger: \"exx\", replacement: \"\\\\exists\", options: \"mA\", priority: 1},\n    //math character\n\t{trigger: \"LL\", replacement: \"\\\\mathcal{L}\", options: \"mA\"},\n\t{trigger: \"HH\", replacement: \"\\\\mathcal{H}\", options: \"mA\"},\n\t{trigger: \"CC\", replacement: \"\\\\mathbb{C}\", options: \"mA\"},\n\t{trigger: \"RR\", replacement: \"\\\\mathbb{R}\", options: \"mA\"},\n    {trigger: \"QQ\", replacement: \"\\\\mathbb{Q}\", options: \"mA\"},\n\t{trigger: \"ZZ\", replacement: \"\\\\mathbb{Z}\", options: \"mA\"},\n\t{trigger: \"NN\", replacement: \"\\\\mathbb{N}\", options: \"mA\"},\n    {trigger: \"FF\", replacement: \"\\\\mathbb{F}\", options: \"mA\"},\n    {trigger: \"KK\", replacement: \"\\\\mathbb{K}\", options: \"mA\"},\n    // {trigger: \"kk\", replacement: \"\\\\mathrm{k}\", options: \"mA\"},\n    {trigger: \"PP\", replacement: \"\\\\mathbb{P}\", options: \"mA\"},\n    {trigger: \"EE\", replacement: \"\\\\mathbb{E}\", options: \"mA\"},\n    // Handle spaces and backslashes\n\n    // Snippet variables can be used as shortcuts when writing snippets.\n    // For example, ${GREEK} below is shorthand for \"alpha|beta|gamma|Gamma|delta|...\"\n    // You can edit snippet variables under the Advanced snippet settings section.\n\n\t{trigger: \"([^\\\\\\\\])(${GREEK})(?<!xi)\", replacement: \"[[0]]\\\\[[1]]\", options: \"rmA\", description: \"Add backslash before Greek letters excluding xi\"},\n    {trigger: \"xi\", replacement: \"\\\\xi \", options: \"rm\"},\n\t{trigger: \"([^\\\\\\\\])(${SYMBOL})\", replacement: \"[[0]]\\\\[[1]]\", options: \"rmA\", description: \"Add backslash before symbols\"},\n\n    // Insert space after Greek letters and symbols\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}|${MORE_SYMBOLS})([A-Za-z])\", replacement: \"\\\\[[0]] [[1]]\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) sr\", replacement: \"\\\\[[0]]^{2}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) cb\", replacement: \"\\\\[[0]]^{3}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) rd\", replacement: \"\\\\[[0]]^{$0}$1\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) hat\", replacement: \"\\\\hat{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) dot\", replacement: \"\\\\dot{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) bar\", replacement: \"\\\\bar{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) vec\", replacement: \"\\\\vec{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) tilde\", replacement: \"\\\\widetilde{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}) und\", replacement: \"\\\\underline{\\\\[[0]]}\", options: \"rmA\"},\n\n\n    // Derivatives and integrals\n    {trigger: \"pa\", replacement: \"\\\\partial $0\", options: \"m\"},\n    {trigger: \"par\", replacement: \"\\\\frac{ \\\\partial ${0:y} }{ \\\\partial ${1:x} } $2\", options: \"m\"},\n    {trigger: \"paa\", replacement: \"\\\\frac{ \\\\partial^2 ${0:y} }{ \\\\partial ${1:x} ^2 } $2\", options: \"m\"},\n    {trigger: /pa([A-Za-z])([A-Za-z])/, replacement: \"\\\\frac{ \\\\partial [[0]] }{ \\\\partial [[1]] } \", options: \"rm\"},\n//chain rule\n    {trigger: /pa([A-Za-z])([A-Za-z])([A-Za-z])([A-Za-z])/, replacement: \"\\\\frac{ \\\\partial [[0]] }{ \\\\partial [[3]] }\\\\frac{ \\\\partial [[3]] }{ \\\\partial [[1]] }+\\\\frac{ \\\\partial [[0]] }{ \\\\partial [[3]] }\\\\frac{ \\\\partial [[3]] }{ \\\\partial [[1]] }\", options: \"rm\"},\n    {trigger: \"ddt\", replacement: \"\\\\frac{d}{dt} \", options: \"mA\"},\n\n    {trigger: /([^\\\\])int/, replacement: \"[[0]]\\\\int\", options: \"mA\", priority: -1},\n    {trigger: \"\\\\int\", replacement: \"\\\\int $0 \\\\, d${1:x} $2\", options: \"m\"},\n    {trigger: \"dint\", replacement: \"\\\\int_{$1}^{$2} $3 \\\\, d${4:x} $5\", options: \"mA\"},\n    {trigger: \"oint\", replacement: \"\\\\oint\", options: \"mA\"},\n\t{trigger: \"iint\", replacement: \"\\\\iint\", options: \"mA\"},\n    {trigger: \"iiint\", replacement: \"\\\\iiint\", options: \"mA\"},\n    {trigger: \"oinf\", replacement: \"\\\\int_{0}^{\\\\infty} $0 \\\\, d${1:x} $2\", options: \"mA\"},\n\t{trigger: \"infi\", replacement: \"\\\\int_{-\\\\infty}^{\\\\infty} $0 \\\\, d${1:x} $2\", options: \"mA\"},\n\n\n    // Trigonometry\n    {trigger: /([^\\\\])(arcsin|sin|arccos|cos|arctan|tan|csc|sec|cot)/, replacement: \"[[0]]\\\\[[1]]\", options: \"rmA\", description: \"Add backslash before trig funcs\"},\n\n    {trigger: /\\\\(arcsin|sin|arccos|cos|arctan|tan|csc|sec|cot)([A-Za-gi-z])/,\n     replacement: \"\\\\[[0]] [[1]]\", options: \"rmA\",\n     description: \"Add space after trig funcs. Skips letter h to allow sinh, cosh, etc.\"},\n\n    {trigger: /\\\\(sinh|cosh|tanh|coth)([A-Za-z])/,\n     replacement: \"\\\\[[0]] [[1]]\", options: \"rmA\",\n     description: \"Add space after hyperbolic trig funcs\"},\n\n\n    // Visual operations\n\t{trigger: \"U\", replacement: \"\\\\underbrace{ ${VISUAL} }_{ $0 }\", options: \"mA\"},\n\t{trigger: \"P\", replacement: \"\\\\overbrace{ ${VISUAL} }^{ $0 }\", options: \"mA\"},\n\t{trigger: \"B\", replacement: \"\\\\underset{ $0 }{ ${VISUAL} }\", options: \"mA\"},\n    {trigger: \"O\", replacement: \"\\\\overset{ $0 }{ ${VISUAL} }\", options: \"mA\"},\n\t{trigger: \"C\", replacement: \"\\\\cancel{ ${VISUAL} }\", options: \"mA\"},\n    {trigger: \"X\", replacement: \"\\\\xcancel{ ${VISUAL} }\", options: \"mA\"},\n\t{trigger: \"K\", replacement: \"\\\\cancelto{ $0 }{ ${VISUAL} }\", options: \"mA\"},\n\t{trigger: \"S\", replacement: \"\\\\sqrt{ ${VISUAL} }\", options: \"mA\"},\n\n\n    // Physics\n\t{trigger: \"kbt\", replacement: \"k_{B}T\", options: \"mA\"},\n\t{trigger: \"msun\", replacement: \"M_{\\\\odot}\", options: \"mA\"},\n\n    // Quantum mechanics\n    {trigger: \"dag\", replacement: \"^{\\\\dagger}\", options: \"mA\"},\n\t{trigger: \"o+\", replacement: \"\\\\oplus \", options: \"mA\"},\n\t{trigger: \"ox\", replacement: \"\\\\otimes \", options: \"mA\"},\n    {trigger: \"bra\", replacement: \"\\\\bra{$0} $1\", options: \"mA\"},\n\t{trigger: \"ket\", replacement: \"\\\\ket{$0} $1\", options: \"mA\"},\n\t{trigger: \"brk\", replacement: \"\\\\braket{ $0 | $1 } $2\", options: \"mA\"},\n    {trigger: \"outer\", replacement: \"\\\\ket{${0:\\\\psi}} \\\\bra{${0:\\\\psi}} $1\", options: \"mA\"},\n\n    // Chemistry\n\t{trigger: \"pu\", replacement: \"\\\\pu{ $0 }\", options: \"mA\"},\n\t{trigger: \"cee\", replacement: \"\\\\ce{ $0 }\", options: \"mA\"},\n\t{trigger: \"he4\", replacement: \"{}^{4}_{2}He \", options: \"mA\"},\n\t{trigger: \"he3\", replacement: \"{}^{3}_{2}He \", options: \"mA\"},\n\t{trigger: \"iso\", replacement: \"{}^{${0:4}}_{${1:2}}${2:He}\", options: \"mA\"},\n\n\n    // Environments\n\t{trigger: \"pmat\", replacement: \"\\\\begin{pmatrix}\\n$0\\n\\\\end{pmatrix}\", options: \"MA\"},\n\t{trigger: \"bmat\", replacement: \"\\\\begin{bmatrix}\\n$0\\n\\\\end{bmatrix}\", options: \"MA\"},\n\t{trigger: \"Bmat\", replacement: \"\\\\begin{Bmatrix}\\n$0\\n\\\\end{Bmatrix}\", options: \"MA\"},\n\t{trigger: \"vmat\", replacement: \"\\\\begin{vmatrix}\\n$0\\n\\\\end{vmatrix}\", options: \"MA\"},\n\t{trigger: \"Vmat\", replacement: \"\\\\begin{Vmatrix}\\n$0\\n\\\\end{Vmatrix}\", options: \"MA\"},\n\t{trigger: \"matrix\", replacement: \"\\\\begin{matrix}\\n$0\\n\\\\end{matrix}\", options: \"MA\"},\n    {trigger: \"CD\", replacement: \"\\\\begin{CD}\\n$0\\n\\\\end{CD}\", options: \"MA\"},\n\n\t{trigger: \"pmat\", replacement: \"\\\\begin{pmatrix}$0\\\\end{pmatrix}\", options: \"nA\"},\n\t{trigger: \"bmat\", replacement: \"\\\\begin{bmatrix}$0\\\\end{bmatrix}\", options: \"nA\"},\n\t{trigger: \"Bmat\", replacement: \"\\\\begin{Bmatrix}$0\\\\end{Bmatrix}\", options: \"nA\"},\n\t{trigger: \"vmat\", replacement: \"\\\\begin{vmatrix}$0\\\\end{vmatrix}\", options: \"nA\"},\n\t{trigger: \"Vmat\", replacement: \"\\\\begin{Vmatrix}$0\\\\end{Vmatrix}\", options: \"nA\"},\n\t{trigger: \"matrix\", replacement: \"\\\\begin{matrix}$0\\\\end{matrix}\", options: \"nA\"},\n\n\t{trigger: \"cases\", replacement: \"\\\\begin{cases}\\n$0\\n\\\\end{cases}\", options: \"mA\"},\n\t{trigger: \"ali\", replacement: \"\\\\begin{aligned}\\n$0\\n\\\\end{aligned}\", options: \"mA\"},\n    {trigger: \"gather\", replacement: \"\\\\begin{gather}\\n$0\\n\\\\end{gather}\", options: \"mA\"},\n\t{trigger: \"array\", replacement: \"\\\\begin{array}{l}\\n$0\\n\\\\end{array}\", options: \"mA\"},\n    {trigger: \"larr\", replacement: \"\\\\left\\\\{\\\\begin{array}{l}\\n$0\\n\\\\end{array}\\\\right.\", options: \"mA\"},\n    {trigger: \"rarr\", replacement: \"\\\\left.\\\\begin{array}{l}\\n$0\\n\\\\end{array}\\\\right\\{\", options: \"mA\"},\n\n\n    // Brackets\n\t{trigger: \"avg\", replacement: \"\\\\langle $0 \\\\rangle $1\", options: \"mA\"},\n\t{trigger: \"norm\", replacement: \"\\\\lvert $0 \\\\rvert $1\", options: \"mA\", priority: 1},\n\t{trigger: \"Norm\", replacement: \"\\\\lVert $0 \\\\rVert $1\", options: \"mA\", priority: 1},\n\t{trigger: \"ceil\", replacement: \"\\\\lceil $0 \\\\rceil $1\", options: \"mA\"},\n\t{trigger: \"floor\", replacement: \"\\\\lfloor $0 \\\\rfloor $1\", options: \"mA\"},\n\t{trigger: \"s.t.\", replacement: \"\\\\text{s.t. }$0\", options: \"mA\"},\n    {trigger: \"a.e.\", replacement: \"\\\\text{a.e.}$0\", options: \"mA\"},\n    {trigger: \"Lie\", replacement: \"\\\\mathrm{Lie}$0\", options: \"mA\"},\n    {trigger: \"sgn\", replacement: \"\\\\mathrm{sgn}$0\", options: \"mA\"},\n\t{trigger: \"mod\", replacement: \"\\\\mathrm{ mod }$0\", options: \"mA\"},\n    {trigger: \"rank\", replacement: \"\\\\mathrm{rank}$0\", options: \"mA\"},\n    {trigger: \"Hom\", replacement: \"\\\\mathrm{Hom}$0\", options: \"mA\"},\n    {trigger: \"Top\", replacement: \"\\\\mathsf{ Top }$0\", options: \"mA\"},\n    {trigger: \"Monoid\", replacement: \"\\\\mathsf{ Monoid }$0\", options: \"mA\"},\n    {trigger: \"Set\", replacement: \"\\\\mathsf{ Set }$0\", options: \"mA\"},\n    {trigger: \"Group\", replacement: \"\\\\mathsf{ Group }$0\", options: \"mA\"},\n    {trigger: \"Graph\", replacement: \"\\\\mathsf{ Graph }$0\", options: \"mA\"},\n    {trigger: \"Mod\", replacement: \"\\\\mathsf{ Mod }$0\", options: \"mA\"},\n    {trigger: \"Vect\", replacement: \"\\\\mathsf{ Vect }$0\", options: \"mA\"},   \n    {trigger: \"Ab\", replacement: \"\\\\mathsf{ Ab }$0\", options: \"mA\"},\n    {trigger: \"Mat\", replacement: \"\\\\mathsf{ Mat }$0\", options: \"mA\"},\n    {trigger: \"Ring\", replacement: \"\\\\mathsf{ Ring }$0\", options: \"mA\"},\n    {trigger: \"Fin\", replacement: \"\\\\mathsf{ Fin }$0\", options: \"mA\"},\n\t{trigger: \"(\", replacement: \"(${VISUAL})\", options: \"mA\"},\n\t{trigger: \"[\", replacement: \"[${VISUAL}]\", options: \"mA\"},\n\t{trigger: \"{\", replacement: \"{${VISUAL}}\", options: \"mA\"},\n\t{trigger: \"(\", replacement: \"($0)$1\", options: \"mA\"},\n\t{trigger: \"{\", replacement: \"{$0}$1\", options: \"mA\"},\n\t{trigger: \"[\", replacement: \"[$0]$1\", options: \"mA\"},\n\t{trigger: \"lr(\", replacement: \"\\\\left( $0 \\\\right) $1\", options: \"mA\"},\n\t{trigger: \"lr{\", replacement: \"\\\\left\\\\{ $0 \\\\right\\\\} $1\", options: \"mA\"},\n\t{trigger: \"lr[\", replacement: \"\\\\left[ $0 \\\\right] $1\", options: \"mA\"},\n\t{trigger: \"lr|\", replacement: \"\\\\left| $0 \\\\right| $1\", options: \"mA\"},\n\t{trigger: \"lra\", replacement: \"\\\\left< $0 \\\\right> $1\", options: \"mA\"},\n\n\n    // Misc\n\n    // Automatically convert standalone letters in text to math (except a, A, I).\n    // (Un-comment to enable)\n    // {trigger: /([^'])\\b([B-HJ-Zb-z])\\b([\\n\\s.,?!:'])/, replacement: \"[[0]]$[[1]]$[[2]]\", options: \"tA\"},\n\n    // Automatically convert Greek letters in text to math.\n    // {trigger: \"(${GREEK})([\\\\n\\\\s.,?!:'])\", replacement: \"$\\\\[[0]]$[[1]]\", options: \"rtAw\"},\n\n    // Automatically convert text of the form \"x=2\" and \"x=n+1\" to math.\n    // {trigger: /([A-Za-z]=\\d+)([\\n\\s.,?!:'])/, replacement: \"$[[0]]$[[1]]\", options: \"rtAw\"},\n    // {trigger: /([A-Za-z]=[A-Za-z][+-]\\d+)([\\n\\s.,?!:'])/, replacement: \"$[[0]]$[[1]]\", options: \"tAw\"},\n\n\n    // Snippet replacements can have placeholders.\n\t{trigger: \"tayl\", replacement: \"${0:f}(${1:x} + ${2:h}) = ${0:f}(${1:x}) + ${0:f}'(${1:x})${2:h} + ${0:f}''(${1:x}) \\\\frac{${2:h}^{2}}{2!} + \\\\dots$3\", options: \"mA\", description: \"Taylor expansion\"},\n\n    // Snippet replacements can also be JavaScript functions.\n    // See the documentation for more information.\n\t{trigger: /iden(\\d)/, replacement: (match) => {\n\t\tconst n = match[1];\n\n\t\tlet arr = [];\n\t\tfor (let j = 0; j < n; j++) {\n\t\t\tarr[j] = [];\n\t\t\tfor (let i = 0; i < n; i++) {\n\t\t\t\tarr[j][i] = (i === j) ? 1 : 0;\n\t\t\t}\n\t\t}\n\n\t\tlet output = arr.map(el => el.join(\" & \")).join(\" \\\\\\\\\\n\");\n\t\toutput = `\\\\begin{pmatrix}\\n${output}\\n\\\\end{pmatrix}`;\n\t\treturn output;\n\t}, options: \"mA\", description: \"N x N identity matrix\"},\n   \n    // Callouts\n    {trigger: \">Note\", replacement: \"> [!NOTE]\\n> $0\", options: \"tA\"},\n    {trigger: \">Abs\", replacement: \"> [!ABSTRACT]\\n> $0\", options: \"tA\"},\n    {trigger: \">Sum\", replacement: \"> [!SUMMARY]\\n> $0\", options: \"tA\"},\n    {trigger: \">Tldr\", replacement: \"> [!TLDR]\\n> $0\", options: \"tA\"},\n    {trigger: \">Info\", replacement: \"> [!INFO]\\n> $0\", options: \"tA\"},\n    {trigger: \">Todo\", replacement: \"> [!TODO]\\n> $0\", options: \"tA\"},\n    {trigger: \">Tip\", replacement: \"> [!TIP]\\n> $0\", options: \"tA\"},\n    {trigger: \">Hint\", replacement: \"> [!HINT]\\n> $0\", options: \"tA\"},\n    {trigger: \">Imp\", replacement: \"> [!IMPORTANT]\\n> $0\", options: \"tA\"},\n    {trigger: \">Suc\", replacement: \"> [!SUCCESS]\\n> $0\", options: \"tA\"},\n    {trigger: \">Check\", replacement: \"> [!CHECK]\\n> $0\", options: \"tA\"},\n    {trigger: \">Done\", replacement: \"> [!DONE]\\n> $0\", options: \"tA\"},\n    {trigger: \">Ques\", replacement: \"> [!QUESTION]\\n> $0\", options: \"tA\"},\n    {trigger: \">Help\", replacement: \"> [!HELP]\\n> $0\", options: \"tA\"},\n    {trigger: \">Faq\", replacement: \"> [!FAQ]\\n> $0\", options: \"tA\"},\n    {trigger: \">Warn\", replacement: \"> [!WARNING]\\n> $0\", options: \"tA\"},\n    {trigger: \">Atten\", replacement: \"> [!ATTRENTION]\\n> $0\", options: \"tA\"},\n    {trigger: \">Caut\", replacement: \"> [!CAUTION]\\n> $0\", options: \"tA\"},\n    {trigger: \">Fail\", replacement: \"> [!FAIL]\\n> $0\", options: \"tA\"},\n    {trigger: \">Miss\", replacement: \"> [!MISSING]\\n> $0\", options: \"tA\"},\n    {trigger: \">Danger\", replacement: \"> [!DANGER]\\n> $0\", options: \"tA\"},\n    {trigger: \">Error\", replacement: \"> [!ERROR]\\n> $0\", options: \"tA\"},\n    {trigger: \">Bug\", replacement: \"> [!BUG]\\n> $0\", options: \"tA\"},\n    {trigger: \">Exam\", replacement: \"> [!EXAMPLE]\\n> $0\", options: \"tA\"},\n    {trigger: \">Quote\", replacement: \"> [!QUOTE]\\n> $0\", options: \"tA\"},\n    {trigger: \">Cite\", replacement: \"> [!CITE]\\n> $0\", options: \"tA\"},\n    {trigger: \">Def\", replacement: \"> [!def]\\n> $0\", options: \"tA\"},\n    {trigger: \">Lem\", replacement: \"> [!lem]\\n> $0\", options: \"tA\"},\n    {trigger: \">Thm\", replacement: \"> [!thm]\\n> $0\", options: \"tA\"},\n    {trigger: \">Cor\", replacement: \"> [!cor]\\n> $0\", options: \"tA\"},\n    {trigger: \">Pro\", replacement: \"> [!proposition]\\n> $0\", options: \"tA\"},\n]\n\n",
  "snippetVariables": "{\n\t\"${GREEK}\": \"alpha|beta|gamma|Gamma|delta|Delta|epsilon|varepsilon|zeta|eta|theta|vartheta|Theta|iota|kappa|lambda|Lambda|mu|nu|xi|omicron|pi|rho|varrho|sigma|Sigma|tau|upsilon|Upsilon|phi|varphi|Phi|chi|psi|omega|Omega\",\n\t\"${SYMBOL}\": \"parallel|perp|partial|nabla|hbar|ell|infty|oplus|ominus|otimes|oslash|square|star|dagger|vee|wedge|subseteq|subset|supseteq|supset|emptyset|exists|nexists|forall|implies|impliedby|iff|setminus|neg|lor|land|bigcup|bigcap|cdot|times|simeq|approx\",\n\t\"${MORE_SYMBOLS}\": \"leq|geq|neq|gg|ll|equiv|sim|propto|rightarrow|leftarrow|Rightarrow|Leftarrow|leftrightarrow|to|mapsto|cap|cup|in|sum|prod|exp|ln|log|det|dots|vdots|ddots|pm|mp|int|iint|iiint|oint\"\n}\n",
  "snippetsEnabled": true,
  "snippetsTrigger": "Tab",
  "suppressSnippetTriggerOnIME": true,
  "removeSnippetWhitespace": true,
  "autoDelete$": true,
  "loadSnippetsFromFile": false,
  "loadSnippetVariablesFromFile": false,
  "snippetsFileLocation": "",
  "snippetVariablesFileLocation": "",
  "concealEnabled": true,
  "colorPairedBracketsEnabled": true,
  "highlightCursorBracketsEnabled": true,
  "mathPreviewEnabled": true,
  "mathPreviewPositionIsAbove": false,
  "autofractionEnabled": false,
  "autofractionSymbol": "\\frac",
  "autofractionBreakingChars": "+-=\t",
  "matrixShortcutsEnabled": true,
  "taboutEnabled": true,
  "autoEnlargeBrackets": true,
  "wordDelimiters": "., +-\\n\t:;!?\\/{}[]()=~$ ",
  "autofractionExcludedEnvs": "[\n\t\t[\"^{\", \"}\"],\n\t\t[\"\\\\pu{\", \"}\"]\n\t]",
  "matrixShortcutsEnvNames": "pmatrix, cases, align, aligned, bmatrix, Bmatrix, vmatrix, Vmatrix, array, matrix,gather",
  "autoEnlargeBracketsTriggers": "sum, int, frac, prod, bigcup, bigcap, bigsqcup",
  "forceMathLanguages": "math"
}